<?xml version="1.0" encoding="utf-8"?>
<!--
/*
Weave (Web-based Analysis and Visualization Environment)
Copyright (C) 2008-2011 University of Massachusetts Lowell

This file is a part of Weave.

Weave is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License, Version 3,
as published by the Free Software Foundation.

Weave is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with Weave.  If not, see <http://www.gnu.org/licenses/>.
*/
-->
<DraggablePanel xmlns="weave.ui.*" xmlns:mx="http://www.adobe.com/2006/mxml" 
				title="{lang('Saved Selections')}"
				width="25%" height="10%"
				layout="vertical" xmlns:tools="weave.visualization.tools.*" xmlns:editors="weave.editors.*">
	
	<mx:Canvas width="100%" height="100%">
		
		<CustomComboBox id="selectionSelectorBox" prompt="{lang('Select a selection...')}"
						width="100%" height="100%"
						labelFunction="selectionsListLabelFunction"
						valueCommit="itemSelected()"
						/>
	</mx:Canvas>
	<mx:Script>
		<![CDATA[
			import weave.Weave;
			import weave.api.copySessionState;
			import weave.api.linkBindableProperty;
			import weave.api.registerLinkableChild;
			import weave.core.LinkableBoolean;
			import weave.data.KeySets.KeySet;
			
			
			public const includeAllRecordsOption:LinkableBoolean = registerLinkableChild(this, new LinkableBoolean(false), updateSubsets);
			private var setToIndex:int = -1;
			
			override protected function constructor():void
			{
				super.constructor();
				
				minimizable.value = false;
				maximizable.value = false;
				pinned.value = true;
			}
			override protected function childrenCreated():void
			{
				super.childrenCreated();
				Weave.savedSelectionKeySets.addGroupedCallback(this, updateSubsets, true);
				Weave.defaultSelectionKeySet.addGroupedCallback(this, handleGlobalSubsetChange);
			}
			private function handleGlobalSubsetChange():void
			{
				if( !Weave.defaultSelectionKeySet.keys.length ) // IF SHOWING ALL RECORDS
					selectionSelectorBox.selectedIndex = -1;
			}
			private function updateSubsets():void
			{
				var list:Array = Weave.savedSelectionKeySets.getObjects();
				if (includeAllRecordsOption.value)
					list.unshift(false);
				selectionSelectorBox.dataProvider = list;
				if( setToIndex >= 0 )
				{
					selectionSelectorBox.selectedIndex = setToIndex;
					setToIndex = -1;
				}
			}
			
			public function selectItem(name:String):void
			{
				setToIndex = Weave.savedSelectionKeySets.getNames().indexOf(name);
			}
			
			/**
			 * Function used solely to get the label for each item in the list
			 **/
			private static function selectionsListLabelFunction(item:Object):String
			{
				if (!item)
					return "No selection";
				
				// The label will be the name of the item followed by the record count
				var label:String = Weave.savedSelectionKeySets.getName(item as KeySet);
				return label + " (" + (item as KeySet).keys.length + " records)";
			}
			
			protected function itemSelected():void
			{
				if (selectionSelectorBox.selectedIndex == -1 ||
					selectionSelectorBox.selectedItem == null ) return;
				
				var selection:KeySet = selectionSelectorBox.selectedItem as KeySet;
				if (selection)
					copySessionState(selection, Weave.defaultSelectionKeySet);
				else
					Weave.defaultSelectionKeySet.clearKeys(); // all records
				
				// reset the selected item to what it was before we set the global subset
				selectionSelectorBox.selectedItem = selection;
			}
			
		]]>
	</mx:Script>
	<ControlPanel>
		<mx:VBox label="{lang('Settings')}">
			<mx:CheckBox label="{lang('Include &quot;No selection&quot; option')}" creationComplete="linkBindableProperty(includeAllRecordsOption, event.target, 'selected')"/>
		</mx:VBox>
		<editors:WindowSettingsEditor target="{this}"/>
	</ControlPanel>
</DraggablePanel>
